<?xml version="1.0" encoding="UTF-8"?>
<beans
        xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:context="http://www.springframework.org/schema/context"
        xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
						http://www.springframework.org/schema/context
	 					http://www.springframework.org/schema/context/spring-context-4.0.xsd">

    <!-- redis配置 -->
    <!-- redis配置文件 -->
    <context:property-placeholder location="classpath*:/redis.properties" ignore-unresolvable="true" />

    <!-- redis连接池 -->
    <bean id="jedisConfig" class="redis.clients.jedis.JedisPoolConfig">
        <!--<property name="maxActive" value="${max_active}"></property>-->
        <property name="maxIdle" value="${max_idle}"></property>
        <!--<property name="maxWait" value="${max_wait}"></property>-->
        <property name="testOnBorrow" value="${test_on_borrow}"></property>
    </bean>
    <!-- redis连接工厂 -->
    <bean id="redisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="hostName" value="${addr}"></property>
        <property name="port" value="${port}"></property>
        <!--<property name="password" value="${redis.auth}"></property>-->
        <property name="poolConfig" ref="jedisConfig"></property>
    </bean>
    <!-- redis操作模板，这里采用尽量面向对象的模板 -->
    <bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
        <property name="connectionFactory" ref="redisConnectionFactory" />
        <!--     如果不配置Serializer，那么存储的时候只能使用String，如果用对象类型存储，那么会提示错误 can't cast to String！！！-->
        <property name="keySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
        </property>
        <property name="valueSerializer">
            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
        </property>
    </bean>

</beans>